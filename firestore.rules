rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    function signedIn() { return request.auth != null; }
    function hasRole(role) {
      return signedIn() && role in request.auth.token.roles;
    }

    // USERS
    match /users/{uid} {
      allow read: if signedIn() && (uid == request.auth.uid || hasRole("admin"));
      allow write: if hasRole("admin");
    }

    // NEGOCIO: lectura autenticada; escritura SOLO v√≠a Admin SDK (/api/brain-persist)
    match /{colName}/{docId} where
      colName in [
        "accounts","ordersSellOut","interactions","shipments",
        "products","materials","billOfMaterials",
        "lots","inventory","stockMoves","productionOrders","qaChecks",
        "mktEvents","onlineCampaigns","creators","influencerCollabs",
        "distributors","suppliers","goodsReceipts","traceEvents",
        // opcionales si los vas a usar ya:
        "activations","receipts","purchaseOrders","priceLists",
        "nonConformities","supplierBills","payments"
      ] {
      allow read: if signedIn();
      allow write: if false;
    }

    // PRICES nested (opcional, si decides anidar price lists bajo /prices/*)
    match /prices/{subCol=**} {
      allow read: if signedIn();
      allow write: if hasRole("admin");
    }

    // Cierra colecciones de test en prod
    match /test_writes/{doc} { allow read, write: if false; }
  }
}
